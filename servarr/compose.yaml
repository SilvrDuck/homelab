---

# Based on https://blog.kye.dev/proxmox-servarr-stack

services:
  ###########################################################################
  ##  Docker Compose File:  qBittorrent (LinuxServer.io)
  ##  Function:             Torrent Download Client
  ##  Documentation:        https://docs.linuxserver.io/images/docker-qbittorrent
  ###########################################################################
  # region qBittorrent
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/qbittorrent:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_QBITTORRENT:?err}:${WEBUI_PORT_QBITTORRENT:?err}"
    # depends_on:
    #   gluetun:
    #     condition: service_healthy
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - WEBUI_PORT=${WEBUI_PORT_QBITTORRENT:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:qbittorrent
      - TP_THEME=${TP_THEME:?err}

  ###########################################################################
  ##  Docker Compose File:  SABnzbd (LinuxServer.io)
  ##  Function:             Usenet Download Client
  ##  Documentation:        https://docs.linuxserver.io/images/docker-sabnzbd
  ###########################################################################
  # region SABnzbd
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/sabnzbd:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data

    ports:
      - "${WEBUI_PORT_SABNZBD:?err}:8080"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sabnzbd
      - TP_THEME=${TP_THEME:?err}

  ###########################################################################
  ##  Docker Compose File:  Bazarr (LinuxServer.io)
  ##  Function:             Download subtitles for Radarr and Sonarr
  ##  Documentation:        https://docs.linuxserver.io/images/docker-bazarr
  ###########################################################################
  # region Bazarr
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/bazarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_BAZARR:?err}:6767"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
      - TP_THEME=${TP_THEME:?err}

  ###########################################################################
  ##  Docker Compose File:  Jellyfin (LinuxServer.io)
  ##  Function:             Media Server
  ##  Documentation:        https://jellyfin.org/docs/general/administration/installing#docker
  ##                        https://jellyfin.org/docs/general/administration/hardware-acceleration/
  ###########################################################################
  # region Jellyfin
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    restart: unless-stopped
    # Hardware Acceleration
    # devices:
    #   - /dev/dri:/dev/dri
    #   - /dev/kfd:/dev/kfd
    # group_add:
    #   - "106" # Change this to match your "render" host group id and remove this comment
    #   - "44" # Change this to match your "video" host group id and remove this comment
    # End Hardware Acceleration
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/jellyfin:/config
      - ${FOLDER_FOR_MEDIA:?err}/cinema:/data/media
    ports:
      - "${WEBUI_PORT_JELLYFIN:?err}:8096"
    #      - 7359:7359/udp      # Enable for DLNA - Only works on HOST Network Mode
    #      - 1900:1900/udp      # Enable for DLNA - Only works on HOST Network Mode
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - ROC_ENABLE_PRE_VEGA=1 # Hardware Acceleration
    #  - DOCKER_MODS=linuxserver/mods:jellyfin-amd
    #  - JELLYFIN_PublishedServerUrl=${LOCAL_DOCKER_IP:?err}  # Enable for DLNA - Only works on HOST Network Mode
    networks:
      - web
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.thvi.ch`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls.certResolver=myresolver"

  ###########################################################################
  ##  Docker Compose File:  Jellyseerr (fallenbagel)
  ##  Function:             Media Request Manager
  ##  Documentation:        https://hub.docker.com/r/fallenbagel/jellyseerr
  ###########################################################################
  # region Jellyseerr
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/jellyseerr:/app/config
    ports:
      - "${WEBUI_PORT_JELLYSEERR:?err}:5055"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
    networks:
      - web
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.thvi.ch`)"
      - "traefik.http.routers.jellyseerr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr.tls.certResolver=myresolver"

  ###########################################################################
  ##  Docker Compose File:  Lidarr (LinuxServer.io)
  ##  Function:             Music Library Manager
  ##  Documentation:        https://docs.linuxserver.io/images/docker-lidarr
  ###########################################################################
  # region Lidarr
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/lidarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_LIDARR:?err}:8686"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:lidarr
      - TP_THEME=${TP_THEME:?err}

  ###########################################################################
  ##  Docker Compose File:  Readarr (LinuxServer.io)
  ##  Function:             Music Library Manager
  ##  Documentation:        https://docs.linuxserver.io/images/docker-readarr
  ###########################################################################
  # region Readarr
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/readarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_READARR:?err}:8787"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:readarr
      - TP_THEME=${TP_THEME:?err}

  ###########################################################################
  ##  Docker Compose File:  Prowlarr (LinuxServer.io)
  ##  Function:             Indexer and Search Manager
  ##  Documentation:        https://docs.linuxserver.io/images/docker-prowlarr
  ###########################################################################
  # region Prowlarr
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/prowlarr:/config
    ports:
      - "${WEBUI_PORT_PROWLARR:?err}:9696"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=${TP_THEME:?err}

  ###########################################################################
  ##  Docker Compose File:  Radarr (LinuxServer.io)
  ##  Function:             Movie Library Manager
  ##  Documentation:        https://docs.linuxserver.io/images/docker-radarr
  ###########################################################################
  # region Radarr
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/radarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_RADARR:?err}:7878"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - web
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.radarr.rule=Host(`radarr.thvi.ch`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certResolver=myresolver"

  ###########################################################################
  ##  Docker Compose File:  Sonarr (LinuxServer.io)
  ##  Function:             Series Library Manager (TV Shows)
  ##  Documentation:        https://docs.linuxserver.io/images/docker-sonarr
  ###########################################################################
  # region Sonarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/sonarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_SONARR:?err}:8989"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - web
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.thvi.ch`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certResolver=myresolver"

  ###########################################################################
  ##  Docker Compose File:  Flaresolverr (Flaresolverr)
  ##  Function:             Cloudflare Proxy Server
  ##  Documentation:        https://github.com/FlareSolverr/FlareSolverr
  ###########################################################################
  # region Flaresolverr
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    restart: unless-stopped
    ports:
      - "${FLARESOLVERR_PORT:?err}:8191"
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TIMEZONE:?err}

  ###########################################################################
  ##  Docker Compose File:  Unpackerr (Hotio.Dev)
  ##  Function:             Archive Media Extraction
  ##  Documentation:        https://github.com/davidnewhall/unpackerr
  ##                        https://github.com/davidnewhall/unpackerr/blob/master/examples/docker-compose.yml
  # region Unpackerr
  ###########################################################################
  unpackerr:
    image: golift/unpackerr:latest
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/unpackerr:/config
      - ${FOLDER_FOR_MEDIA:?err}/:/data
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      # Documentation on all Environment Variables can be found at:
      # https://github.com/davidnewhall/unpackerr#docker-env-variables
      - UN_DEBUG=false
      - UN_LOG_FILE=
      - UN_LOG_FILES=10
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=2m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=5m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0664
      - UN_DIR_MODE=0775
      # Sonarr Config - Copy API Key from: http://sonarr:8989/general/settings
      - UN_SONARR_0_URL=http://sonarr:8989
      - UN_SONARR_0_API_KEY=${SONARR_API_KEY}
      - UN_SONARR_0_PATHS_0=/data/torrents/anime
      - UN_SONARR_0_PATHS_1=/data/torrents/series
      - UN_SONARR_0_PROTOCOLS=torrent
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_DELETE_DELAY=5m
      # Radarr Config - Copy API Key from: http://radarr:7878/general/settings
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=${RADARR_API_KEY}
      - UN_RADARR_0_PATHS_0=/data/torrents/movies
      - UN_RADARR_0_PROTOCOLS=torrent
      - UN_RADARR_0_TIMEOUT=10s
      - UN_RADARR_0_DELETE_ORIG=false
      - UN_RADARR_0_DELETE_DELAY=5m
      # Lidarr Config - Copy API Key from: http://lidarr:8686/general/settings
      - UN_LIDARR_0_URL=http://lidarr:8686
      - UN_LIDARR_0_API_KEY=${LIDARR_API_KEY}
      - UN_LIDARR_0_PATHS_0=/data/torrents/music
      - UN_LIDARR_0_PROTOCOLS=torrent
      - UN_LIDARR_0_TIMEOUT=10s
      - UN_LIDARR_0_DELETE_ORIG=false
      - UN_LIDARR_0_DELETE_DELAY=5m
    security_opt:
      - no-new-privileges:true
    network_mode: none
